name: Build, Test, and Publish

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  check-version-txt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag with the release version
        run: |
          git tag $(cat version.txt)
    

  lint-format-and-static-qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/.pre-commit-config.yaml') }}
      - name: install pre-commit
        run: |
          pip install pre-commit
      - name: lint, format, and other static code quality checks
        run: |
          /bin/bash -x run.sh lint:ci
 

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Install build CLI
        run: |
          pip install build

      - name: Build Python package
        run: /bin/bash -x run.sh build

      - uses: actions/upload-artifact@v4
        with:
          name: python package
          path: ./dist/*

    
  execute_tests:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Download wheel and sdist
        uses: actions/download-artifact@v4
        with:
          name: python package
          path: ./dist/
      - name: Install test dependencies
        run: |
          pip install pytest pytest-cov ./dist/*.whl
      - name: lint, format, and other static code quality checks
        run: |
          /bin/bash -x run.sh test:ci


  publish:
    needs:
      - execute_tests
      - build
      - lint-format-and-static-qa
      - check-version-txt
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Download wheel and sdist
        uses: actions/download-artifact@v4
        with:
          name: python package
          path: ./dist/

      - name: Install twine
        run: |
          pip install twine

      - name: Pusblish to TestPyPI
        run: |
          /bin/bash -x run.sh publish:test
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Pusblish to ProdPyPI
        run: |
          /bin/bash -x run.sh publish:prod
        env:
          TEST_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}

      - name: Tag release version
        run: |
          git push origin --tags
